////////////////////////////////////// 
procedure _I_sumtab_ai_i
    frame size: 0
    formal parameters: 1
    cfg entry point: L0
    cfg entry point successors: [L2]
    cfg exit point: L1
    cfg exit point predecessors : [L4, L6]
L2:
    cfg successors: [L3]
    cfg predecessors: [L0]
    move %tmp1, 0
    move %tmp2, 0
    loadmem %tmp3, %tmp0, -4 // %tmp3 = mem[%tmp0 + -4]
    move %tmp4, %tmp3
    jump L3
L3:
    cfg successors: [L4, L5]
    cfg predecessors: [L2, L5]

    branch lt, %tmp2, %tmp4, L5, L4
L4:
    cfg successors: [L1]
    cfg predecessors: [L3]

    return [%tmp1]
L5:
    cfg successors: [L3]
    cfg predecessors: [L3]
    mul %tmp8, %tmp2, 4
    loadmem %tmp5, %tmp0, %tmp8 // %tmp5 = mem[%tmp0 + %tmp8]
    add %tmp6, %tmp1, %tmp5
    move %tmp1, %tmp6
    add %tmp7, %tmp2, 1
    move %tmp2, %tmp7
    jump L3
L6:
    cfg successors: [L1]
    cfg predecessors: []

    return []
////////////////////////////////////// 
procedure _I_main__i
    frame size: 0
    formal parameters: 0
    cfg entry point: L0
    cfg entry point successors: [L2]
    cfg exit point: L1
    cfg exit point predecessors : [L2, L3]
L2:
    cfg successors: [L1]
    cfg predecessors: [L0]
    mul %tmp3, 10, 4
    add %tmp3, %tmp3, 4
    call [%tmp0], _xi_alloc, [%tmp3], kill []
    add %tmp0, %tmp0, 4
    storemem %tmp0, -4, 10 // mem[%tmp0 + -4] = 10
    storemem %tmp0, 0, 0 // mem[%tmp0 + 0] = 0
    storemem %tmp0, 4, 1 // mem[%tmp0 + 4] = 1
    storemem %tmp0, 8, 2 // mem[%tmp0 + 8] = 2
    storemem %tmp0, 12, 3 // mem[%tmp0 + 12] = 3
    storemem %tmp0, 16, 4 // mem[%tmp0 + 16] = 4
    storemem %tmp0, 20, 5 // mem[%tmp0 + 20] = 5
    storemem %tmp0, 24, 6 // mem[%tmp0 + 24] = 6
    storemem %tmp0, 28, 7 // mem[%tmp0 + 28] = 7
    storemem %tmp0, 32, 8 // mem[%tmp0 + 32] = 8
    storemem %tmp0, 36, 9 // mem[%tmp0 + 36] = 9
    move %tmp1, %tmp0
    call [%tmp2], _I_sumtab_ai_i, [%tmp1], kill []
    call [], _I_printInt_i_, [%tmp2], kill []
    return [0]
L3:
    cfg successors: [L1]
    cfg predecessors: []

    return []
