digraph CFG {
node [shape=none; fontname="Courier" fontsize="9"];
ordering=out;
NL3[shape=none, margin=0, label=<<table cellspacing='0' cellborder='1' align='left' border='0'><tr><td colspan='3' port='e' bgcolor='yellow'><b>BLOCK L3</b></td></tr><tr><td colspan='3'></td></tr><tr><td></td><td bgcolor='green' ><b>return []</b></td><td></td></tr><tr><td colspan='3' port='x'></td></tr></table>>];
NL1[shape=none, margin=0, label=<<table cellspacing='0' cellborder='1' align='left' border='0'><tr><td colspan='3' port='e' bgcolor='yellow'><b>EXIT L1</b></td></tr><tr><td colspan='3'>%tmp0=T %tmp1=%tmp0 %tmp2=32</td></tr><tr><td colspan='3' port='x'>%tmp0=T %tmp1=%tmp0 %tmp2=32</td></tr></table>>];
NL2[shape=none, margin=0, label=<<table cellspacing='0' cellborder='1' align='left' border='0'><tr><td colspan='3' port='e' bgcolor='yellow'><b>BLOCK L2</b></td></tr><tr><td colspan='3'></td></tr><tr><td></td><td align='left'><b>mul %tmp2, 7, 4</b></td><td>%tmp2=28</td></tr><tr><td>%tmp2=28</td><td align='left'><b>add %tmp2, %tmp2, 4</b></td><td>%tmp2=32</td></tr><tr><td>%tmp2=32</td><td align='left'><b>call [%tmp0], _xi_alloc, [%tmp2], kill []</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>add %tmp0, %tmp0, 4</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, -4, 7 // mem[%tmp0 + -4] = 7</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, 0, 87 // mem[%tmp0 + 0] = 87</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, 4, 114 // mem[%tmp0 + 4] = 114</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, 8, 111 // mem[%tmp0 + 8] = 111</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, 12, 99 // mem[%tmp0 + 12] = 99</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, 16, 108 // mem[%tmp0 + 16] = 108</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, 20, 97 // mem[%tmp0 + 20] = 97</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>storemem %tmp0, 24, 119 // mem[%tmp0 + 24] = 119</b></td><td>%tmp0=T %tmp2=32</td></tr><tr><td>%tmp0=T %tmp2=32</td><td align='left'><b>move %tmp1, %tmp0</b></td><td>%tmp0=T %tmp1=%tmp0 %tmp2=32</td></tr><tr><td>%tmp0=T %tmp1=%tmp0 %tmp2=32</td><td align='left'><b>call [], _I_sort_ai_, [%tmp1], kill []</b></td><td>%tmp0=T %tmp1=%tmp0 %tmp2=32</td></tr><tr><td>%tmp0=T %tmp1=%tmp0 %tmp2=32</td><td align='left'><b>call [], _I_printString_ai_, [%tmp1], kill []</b></td><td>%tmp0=T %tmp1=%tmp0 %tmp2=32</td></tr><tr><td>%tmp0=T %tmp1=%tmp0 %tmp2=32</td><td bgcolor='green' ><b>return [1]</b></td><td>%tmp0=T %tmp1=%tmp0 %tmp2=32</td></tr><tr><td colspan='3' port='x'>%tmp0=T %tmp1=%tmp0 %tmp2=32</td></tr></table>>];
NL0[shape=none, margin=0, label=<<table cellspacing='0' cellborder='1' align='left' border='0'><tr><td colspan='3' port='e' bgcolor='yellow'><b>ENTRY L0</b></td></tr><tr><td colspan='3'></td></tr><tr><td colspan='3' port='x'></td></tr></table>>];
NL3:x -> NL1:e;

NL2:x -> NL1:e;
NL0:x -> NL2:e;
}
