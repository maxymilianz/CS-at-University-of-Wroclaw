////////////////////////////////////// 
procedure _I_sort_ai_
    frame size: 0
    formal parameters: 1
    cfg entry point: L0
    cfg entry point successors: [L2]
    cfg exit point: L1
    cfg exit point predecessors : [L4]
L2:
    cfg successors: [L3]
    cfg predecessors: [L0]
    def [%hard16, %hard17, %hard18, %hard19, %hard20, %hard21, %hard22, %hard23]
    move %hard1, 0
    loadmem %hard4, %hard4, -4 // %hard4 = mem[%hard4 + -4]
    jump L3
L3:
    cfg successors: [L4, L5]
    cfg predecessors: [L2, L7]
    set %hard2, lt, %hard1, %hard4
    branch ne, %hard2, %spec0, L5, L4
L4:
    cfg successors: [L1]
    cfg predecessors: [L3]
    use [%hard16, %hard17, %hard18, %hard19, %hard20, %hard21, %hard22, %hard23]
    return []
L5:
    cfg successors: [L6]
    cfg predecessors: [L3]
    move %hard3, %hard1
    jump L6
L6:
    cfg successors: [L7, L8]
    cfg predecessors: [L5, L9]
    move %hard2, 0
    set %hard2, lt, %hard2, %hard3
    branch ne, %hard2, %spec0, L8, L7
L7:
    cfg successors: [L3]
    cfg predecessors: [L6]
    add %hard1, %hard1, 1
    jump L3
L8:
    cfg successors: [L9, L11]
    cfg predecessors: [L6]
    set %tmp33, lt, %tmp7, %tmp6
    branch ne, %tmp33, %spec0, L11, L9
L9:
    cfg successors: [L6]
    cfg predecessors: [L8, L11]
    move %hard2, 1
    sub %hard3, %hard3, %hard2
    jump L6
L11:
    cfg successors: [L9]
    cfg predecessors: [L8]

    jump L9
